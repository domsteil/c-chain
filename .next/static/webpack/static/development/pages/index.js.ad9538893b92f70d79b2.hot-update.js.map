{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.ad9538893b92f70d79b2.hot-update.js","sources":["webpack:///./components/upload/FileUpload.js"],"sourcesContent":["import React from 'react'\r\nimport axios, { post } from 'axios';\r\n\r\nclass SimpleReactFileUpload extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n      file:null,\r\n      policy:''\r\n    }\r\n    this.onFormSubmit = this.onFormSubmit.bind(this)\r\n    this.onChange = this.onChange.bind(this)\r\n    this.fileUpload = this.fileUpload.bind(this)\r\n  }\r\n  onFormSubmit(e){\r\n    e.preventDefault() // Stop form submit\r\n    this.fileUpload(this.state.file).then((response)=>{\r\n      console.log(response.data);\r\n    })\r\n  }\r\n  onChange(e) {\r\n    this.setState({file:e.target.files[0]})\r\n  }\r\n  fileUpload(file){\r\n    const url = \"https://app.triplecheck.network/upload\";\r\n    const formData = new FormData();\r\n    formData.append('policy', policy)\r\n    formData.append('file',file)\r\n    const config = {\r\n        headers: {\r\n            'content-type': 'multipart/form-data'\r\n        }\r\n    }\r\n    return  post(url, formData,config)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onFormSubmit}>\r\n        <h1>File Upload</h1>\r\n        <input type=\"file\" onChange={this.onChange} />\r\n        <select id=\"policy\" className=\"policyDropdown\" value={this.state.policy} onChange={(e) => this.setState({policy: e.target.value, validationError: e.target.value === \"\" ? \"You must select a policy\" : \"\"})} >\r\n          <option value=\"policy1\">Policy 1</option>\r\n          <option value=\"policy2\">Policy 2</option>\r\n        </select>\r\n        <button type=\"submit\">Upload</button>\r\n      </form>\r\n   )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default SimpleReactFileUpload"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AARA;AASA;AACA;;;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA9CA;AACA;AAkDA;;;;A","sourceRoot":""}