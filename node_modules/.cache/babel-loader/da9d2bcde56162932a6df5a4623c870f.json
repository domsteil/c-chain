{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from 'axios';\nimport { deflateSync } from 'zlib';\n\nfunction useAsyncEndpoint(fn) {\n  var _useState = useState({\n    data: null,\n    pending: deflateSync,\n    completed: false,\n    error: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      res = _useState2[0],\n      setRes = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      req = _useState4[0],\n      setReq = _useState4[1];\n\n  useEffect(function () {\n    if (!req) return;\n    setRes({\n      data: null,\n      pending: true,\n      completed: false,\n      error: false\n    });\n    axios(req).then(function (res) {\n      return setRes({\n        data: res.data,\n        pending: false,\n        error: false,\n        complete: true\n      });\n    }).catch(function () {\n      return setRes({\n        data: null,\n        pending: false,\n        error: true,\n        complete: true\n      });\n    });\n  }, [req]);\n  return [res, function () {\n    return setReq(fn.apply(void 0, arguments));\n  }];\n}\n\nvar publisherAPI = \"https://dapps.ngrok.io:3000/api/\";\n\nfunction postPublisherEndpoint() {\n  return useAsyncEndpoint(function (data) {\n    return {\n      url: publisherAPI,\n      method: \"POST\",\n      data: data\n    };\n  });\n}\n\nexport default function MessageBar(props) {\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      message = _useState6[0],\n      setMessage = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      to = _useState8[0],\n      setTo = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      who = _useState10[0],\n      setWho = _useState10[1];\n\n  var _postPublisherEndpoin = postPublisherEndpoint(),\n      _postPublisherEndpoin2 = _slicedToArray(_postPublisherEndpoin, 2),\n      newMessage = _postPublisherEndpoin2[0],\n      postNewMessage = _postPublisherEndpoin2[1];\n\n  var handleKeyPress = function handleKeyPress(event) {\n    if (event.key == 'Enter' || event.keyCode == 13) {\n      sendChat();\n    }\n  };\n\n  function sendChat() {\n    postNewMessage({\n      to: to,\n      message: message\n    });\n  }\n\n  return React.createElement(\"section\", {\n    className: \"jsx-814487990\"\n  }, React.createElement(\"div\", {\n    className: \"jsx-814487990\" + \" \" + \"row\"\n  }, React.createElement(\"div\", {\n    className: \"jsx-814487990\" + \" \" + \"column\"\n  }, React.createElement(\"br\", {\n    className: \"jsx-814487990\"\n  }), React.createElement(\"input\", {\n    defaultValue: \"IPFS Hashlink\",\n    value: message,\n    onChange: function onChange(e) {\n      return setMessage(e.target.value);\n    },\n    onKeyPress: handleKeyPress,\n    className: \"jsx-814487990\" + \" \" + \"message-box\"\n  }))), React.createElement(_JSXStyle, {\n    id: \"814487990\"\n  }, [\".column.jsx-814487990{text-align:center;border-width:1px;list-style:none;padding-bottom:8px;padding-top:8px;margin-right:28px;}\", \".to.jsx-814487990{width:260px;padding-bottom:8px;padding-top:8px;border:1px solid #d0d4d9;border-radius:.375rem;-webkit-box-shadow:inset 0 -1px 0 0 rgba(100,121,143,0.122);box-shadow:inset 0 -1px 0 0 rgba(100,121,143,0.122);line-height:20px;min-height:auto;padding-left:0;padding-right:0;}\", \".message-box.jsx-814487990{padding-bottom:28px;width:1070px;overflow:auto;margin:0;min-height:42px;height:38px;max-height:180px;border:2px solid rgba(134,134,134,.7);border-radius:.375rem;outline:0;background:#fff;resize:none;box-shadow:none;color:#1d1c1d;-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;padding:9px 30px 10px 50px;\\\"      }      .login {        color: #FFF;      }      .account {        font-size: 13px;        line-height: 1.91667;        font-weight: 400;        color: #3d464d;        border: 1px solid #bdc4c9;        padding: 3.5px 7px;        border-radius: 4px;        margin-top: 28px;        margin-left: 8px;      }      .row {        flex-direction: column;        margin: -1.5rem 0;        text-align: center;      }      // CSS only media query for tablet      @media screen and (max-width: 960px) {        .row {          flex-direction: column;          margin: -1.5rem 0;        }        .column {          width: 10%;          padding: 1.5rem 0;          text-align: center;          max-width: 100px;        }        .message-box {          padding-bottom: 28px;          width: 100px;          overflow: auto;          margin: 0;           min-height: 42px;           height: 38px;           max-height: 180px;           border: 2px solid rgba(134,134,134,.7);          border-radius: .375rem;          outline: 0;          background: #FFFFFF;          resize: none;          box-shadow: none;          color: #1d1c1d;          -webkit-user-select: auto;          -moz-user-select: auto;          -ms-user-select: auto;          user-select: auto;          padding: 9px 30px 10px 50px;          display: none;        }              };}\"]));\n}","map":null,"metadata":{},"sourceType":"module"}