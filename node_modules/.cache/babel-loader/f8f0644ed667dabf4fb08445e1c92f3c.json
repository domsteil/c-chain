{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { Component } from \"react\";\nimport Dropzone from \"../dropzone/Dropzone\";\nimport Progress from \"../progress/Progress\";\n\nvar Upload =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Upload, _Component);\n\n  function Upload(props) {\n    var _this;\n\n    _classCallCheck(this, Upload);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Upload).call(this, props));\n    _this.state = {\n      files: [],\n      policy: [],\n      uploading: false,\n      uploadProgress: {},\n      successfullUploaded: false\n    };\n    _this.onFilesAdded = _this.onFilesAdded.bind(_assertThisInitialized(_this));\n    _this.uploadFiles = _this.uploadFiles.bind(_assertThisInitialized(_this));\n    _this.sendRequest = _this.sendRequest.bind(_assertThisInitialized(_this));\n    _this.renderActions = _this.renderActions.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Upload, [{\n    key: \"onFilesAdded\",\n    value: function onFilesAdded(files) {\n      this.setState(function (prevState) {\n        return {\n          files: prevState.files.concat(files)\n        };\n      });\n    }\n  }, {\n    key: \"uploadFiles\",\n    value: function () {\n      var _uploadFiles = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var promises;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState({\n                  uploadProgress: {},\n                  uploading: true\n                });\n                promises = [];\n                this.state.files.forEach(function (file) {\n                  promises.push(_this2.sendRequest(file));\n                });\n                _context.prev = 3;\n                _context.next = 6;\n                return _Promise.all(promises);\n\n              case 6:\n                this.setState({\n                  successfullUploaded: true,\n                  uploading: false\n                });\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](3);\n                // Not Production ready! Do some error handling here instead...\n                this.setState({\n                  successfullUploaded: true,\n                  uploading: false\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 9]]);\n      }));\n\n      function uploadFiles() {\n        return _uploadFiles.apply(this, arguments);\n      }\n\n      return uploadFiles;\n    }()\n  }, {\n    key: \"sendRequest\",\n    value: function sendRequest(file) {\n      var _this3 = this;\n\n      return new _Promise(function (resolve, reject) {\n        var req = new XMLHttpRequest();\n        req.upload.addEventListener(\"progress\", function (event) {\n          if (event.lengthComputable) {\n            var copy = _objectSpread({}, _this3.state.uploadProgress);\n\n            copy[file.name] = {\n              state: \"pending\",\n              percentage: event.loaded / event.total * 100\n            };\n\n            _this3.setState({\n              uploadProgress: copy\n            });\n          }\n        });\n        req.upload.addEventListener(\"load\", function (event) {\n          var copy = _objectSpread({}, _this3.state.uploadProgress);\n\n          copy[file.name] = {\n            state: \"done\",\n            percentage: 100\n          };\n\n          _this3.setState({\n            uploadProgress: copy\n          });\n\n          resolve(req.response);\n        });\n        req.upload.addEventListener(\"error\", function (event) {\n          var copy = _objectSpread({}, _this3.state.uploadProgress);\n\n          copy[file.name] = {\n            state: \"error\",\n            percentage: 0\n          };\n\n          _this3.setState({\n            uploadProgress: copy\n          });\n\n          reject(req.response);\n        });\n        var formData = new FormData();\n        formData.append(\"policy\", policy, policy.value);\n        formData.append(\"file\", file, file.name);\n        req.open(\"POST\", \"http://ec2-18-204-34-34.compute-1.amazonaws.com:5000/upload\");\n        req.send(formData);\n      });\n    }\n  }, {\n    key: \"renderProgress\",\n    value: function renderProgress(file) {\n      var uploadProgress = this.state.uploadProgress[file.name];\n\n      if (this.state.uploading || this.state.successfullUploaded) {\n        return React.createElement(\"div\", {\n          className: \"ProgressWrapper\"\n        }, React.createElement(Progress, {\n          progress: uploadProgress ? uploadProgress.percentage : 0\n        }), React.createElement(\"img\", {\n          className: \"CheckIcon\",\n          alt: \"done\",\n          src: \"baseline-check_circle_outline-24px.svg\",\n          style: {\n            opacity: uploadProgress && uploadProgress.state === \"done\" ? 0.5 : 0\n          }\n        }));\n      }\n    }\n  }, {\n    key: \"renderActions\",\n    value: function renderActions() {\n      var _this4 = this;\n\n      if (this.state.successfullUploaded) {\n        return React.createElement(\"button\", {\n          className: \"PolicyButton\",\n          onClick: function onClick() {\n            return _this4.setState({\n              files: [],\n              successfullUploaded: false\n            });\n          }\n        }, \"Clear\");\n      } else {\n        return React.createElement(\"button\", {\n          className: \"PolicyButton\",\n          disabled: this.state.files.length < 0 || this.state.uploading,\n          onClick: this.uploadFiles\n        }, \"Upload\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(\"div\", {\n        className: \"jsx-1300467743\" + \" \" + \"Upload\"\n      }, React.createElement(\"span\", {\n        className: \"jsx-1300467743\" + \" \" + \"Title\"\n      }), React.createElement(\"div\", {\n        className: \"jsx-1300467743\" + \" \" + \"Content\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-1300467743\"\n      }, React.createElement(Dropzone, {\n        onFilesAdded: this.onFilesAdded,\n        disabled: this.state.uploading || this.state.successfullUploaded\n      })), React.createElement(\"div\", {\n        className: \"jsx-1300467743\" + \" \" + \"Files\"\n      }, this.state.files.map(function (file) {\n        return React.createElement(\"div\", {\n          key: file.name,\n          className: \"jsx-1300467743\" + \" \" + \"Row\"\n        }, React.createElement(\"span\", {\n          className: \"jsx-1300467743\" + \" \" + \"Filename\"\n        }, file.name), _this5.renderProgress(file));\n      }))), React.createElement(\"div\", {\n        className: \"jsx-1300467743\" + \" \" + \"Actions\"\n      }, this.renderActions()), React.createElement(\"form\", {\n        id: \"policy\",\n        className: \"jsx-1300467743\"\n      }, React.createElement(\"select\", {\n        onSelect: function onSelect() {\n          return _this5.setState({\n            policy: [],\n            successfullUploaded: false\n          });\n        },\n        className: \"jsx-1300467743\" + \" \" + \"PolicyButton\"\n      }, React.createElement(\"option\", {\n        value: \"policy1\",\n        className: \"jsx-1300467743\"\n      }, \"Policy 1\"), React.createElement(\"option\", {\n        value: \"policy2\",\n        className: \"jsx-1300467743\"\n      }, \"Policy 2\"))), React.createElement(_JSXStyle, {\n        id: \"1300467743\"\n      }, \".Upload.jsx-1300467743{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:1;-ms-flex:1;flex:1;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;text-align:left;overflow:hidden;width:300px;align:center;margin-left:800px;}.PolicyButton.jsx-1300467743{-webkit-appearance:none;position:relative;display:inline-block;vertical-align:middle;text-transform:uppercase;text-align:center;line-height:0;white-space:nowrap;width:120px;height:30px;margin-left:8px;font-weight:500;font-size:12px;color:#000;background-color:rgb(255,255,255);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;-webkit-text-decoration:none;text-decoration:none;padding:0px 10px;margin-bottom:2px;border-radius:5px;border-width:1px;border-style:solid;border-color:rgb(234,234,234);border-image:initial;-webkit-transition:all 0.2s ease 0s;transition:all 0.2s ease 0s;overflow:hidden;outline:none;}.Content.jsx-1300467743{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;padding-top:16px;box-sizing:border-box;width:100%;}.Files.jsx-1300467743{margin-left:32px;color:#FFF;font-color:#FFF;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;justify-items:flex-start;-webkit-flex:1;-ms-flex:1;flex:1;overflow-y:auto;}.Actions.jsx-1300467743{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex:1;-ms-flex:1;flex:1;width:100%;-webkit-align-items:flex-end;-webkit-box-align:flex-end;-ms-flex-align:flex-end;align-items:flex-end;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;margin-top:32px;}.Title.jsx-1300467743{margin-bottom:32px;color:#FFF;}.Filename.jsx-1300467743{margin-bottom:8px;padding-right:100px;font-size:12px;color:#FFF;}.Row.jsx-1300467743{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex:1;-ms-flex:1;flex:1;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;height:50px;padding:8px;overflow:hidden;box-sizing:border-box;}.CheckIcon.jsx-1300467743{opacity:0.5;margin-left:32px;}.ProgressWrapper.jsx-1300467743{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex:1;-ms-flex:1;flex:1;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}button.jsx-1300467743{font-family:\\\"Roboto medium\\\",sans-serif;font-size:14px;display:inline-block;height:36px;min-width:88px;padding:6px 16px;line-height:1.42857143;text-align:center;white-space:nowrap;vertical-align:middle;-ms-touch-action:manipulation;touch-action:manipulation;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border:0;border-radius:2px;background:rgba(103,58,183,1);color:#fff;outline:0;}button.jsx-1300467743:disabled{background:rgb(189,189,189);cursor:default;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=C:\\\\c-chain\\\\components\\\\upload\\\\Upload.js */\"));\n    }\n  }]);\n\n  return Upload;\n}(Component);\n\nexport default Upload;","map":{"version":3,"sources":["C:\\c-chain\\components\\upload\\Upload.js"],"names":["React","Component","Dropzone","Progress","Upload","props","state","files","policy","uploading","uploadProgress","successfullUploaded","onFilesAdded","bind","uploadFiles","sendRequest","renderActions","setState","prevState","concat","promises","forEach","file","push","all","resolve","reject","req","XMLHttpRequest","upload","addEventListener","event","lengthComputable","copy","name","percentage","loaded","total","response","formData","FormData","append","value","open","send","opacity","length","map","renderProgress"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Dropzone from \"../dropzone/Dropzone\";\r\nimport Progress from \"../progress/Progress\";\r\n\r\nclass Upload extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      files: [],\r\n      policy: [],\r\n      uploading: false,\r\n      uploadProgress: {},\r\n      successfullUploaded: false\r\n    };\r\n\r\n    this.onFilesAdded = this.onFilesAdded.bind(this);\r\n    this.uploadFiles = this.uploadFiles.bind(this);\r\n    this.sendRequest = this.sendRequest.bind(this);\r\n    this.renderActions = this.renderActions.bind(this);\r\n  }\r\n\r\n  onFilesAdded(files) {\r\n    this.setState(prevState => ({\r\n      files: prevState.files.concat(files)\r\n    }));\r\n  }\r\n\r\n  async uploadFiles() {\r\n    this.setState({ uploadProgress: {}, uploading: true });\r\n    const promises = [];\r\n    this.state.files.forEach(file => {\r\n      promises.push(this.sendRequest(file));\r\n    });\r\n    try {\r\n      await Promise.all(promises);\r\n\r\n      this.setState({ successfullUploaded: true, uploading: false });\r\n    } catch (e) {\r\n      // Not Production ready! Do some error handling here instead...\r\n      this.setState({ successfullUploaded: true, uploading: false });\r\n    }\r\n  }\r\n\r\n  sendRequest(file) {\r\n    return new Promise((resolve, reject) => {\r\n      const req = new XMLHttpRequest();\r\n\r\n      req.upload.addEventListener(\"progress\", event => {\r\n        if (event.lengthComputable) {\r\n          const copy = { ...this.state.uploadProgress };\r\n          copy[file.name] = {\r\n            state: \"pending\",\r\n            percentage: (event.loaded / event.total) * 100\r\n          };\r\n          this.setState({ uploadProgress: copy });\r\n        }\r\n      });\r\n\r\n      req.upload.addEventListener(\"load\", event => {\r\n        const copy = { ...this.state.uploadProgress };\r\n        copy[file.name] = { state: \"done\", percentage: 100 };\r\n        this.setState({ uploadProgress: copy });\r\n        resolve(req.response);\r\n      });\r\n\r\n      req.upload.addEventListener(\"error\", event => {\r\n        const copy = { ...this.state.uploadProgress };\r\n        copy[file.name] = { state: \"error\", percentage: 0 };\r\n        this.setState({ uploadProgress: copy });\r\n        reject(req.response);\r\n      });\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"policy\", policy, policy.value);\r\n      formData.append(\"file\", file, file.name);\r\n\r\n      req.open(\"POST\", \"http://ec2-18-204-34-34.compute-1.amazonaws.com:5000/upload\");\r\n      req.send(formData);\r\n    });\r\n  }\r\n\r\n  renderProgress(file) {\r\n    const uploadProgress = this.state.uploadProgress[file.name];\r\n    if (this.state.uploading || this.state.successfullUploaded) {\r\n      return (\r\n        <div className=\"ProgressWrapper\">\r\n          <Progress progress={uploadProgress ? uploadProgress.percentage : 0} />\r\n          <img\r\n            className=\"CheckIcon\"\r\n            alt=\"done\"\r\n            src=\"baseline-check_circle_outline-24px.svg\"\r\n            style={{\r\n              opacity:\r\n                uploadProgress && uploadProgress.state === \"done\" ? 0.5 : 0\r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderActions() {\r\n    if (this.state.successfullUploaded) {\r\n      return (\r\n        <button className=\"PolicyButton\"\r\n          onClick={() =>\r\n            this.setState({ files: [], successfullUploaded: false })\r\n          }\r\n        >\r\n          Clear\r\n        </button>\r\n      );\r\n    } else {\r\n      return (\r\n        <button className=\"PolicyButton\"\r\n          disabled={this.state.files.length < 0 || this.state.uploading}\r\n          onClick={this.uploadFiles}\r\n        >\r\n          Upload\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Upload\">\r\n        <span className=\"Title\"></span>\r\n        <div className=\"Content\">\r\n          <div>\r\n            <Dropzone\r\n              onFilesAdded={this.onFilesAdded}\r\n              disabled={this.state.uploading || this.state.successfullUploaded}\r\n            />\r\n          </div>\r\n          <div className=\"Files\">\r\n            {this.state.files.map(file => {\r\n              return (\r\n                <div key={file.name} className=\"Row\">\r\n                  <span className=\"Filename\">{file.name}</span>\r\n                  {this.renderProgress(file)}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"Actions\">{this.renderActions()}</div>\r\n\r\n        <form id=\"policy\">\r\n        <select className=\"PolicyButton\" onSelect={() => this.setState({ policy: [], successfullUploaded: false })} >\r\n          <option value=\"policy1\">Policy 1</option>\r\n          <option value=\"policy2\">Policy 2</option>\r\n        </select>\r\n        </form>\r\n        <style jsx>{`\r\n\r\n.Upload {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n    align-items: flex-start;\r\n    text-align: left;\r\n    overflow: hidden;\r\n    width: 300px;\r\n    align: center;\r\n    margin-left: 800px;\r\n  }\r\n\r\n  .PolicyButton {\r\n    -webkit-appearance: none;\r\n    position: relative;\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n    text-transform: uppercase;\r\n    text-align: center;\r\n    line-height: 0;\r\n    white-space: nowrap;\r\n    width: 120px;\r\n    height: 30px;\r\n    margin-left: 8px;\r\n    font-weight: 500;\r\n    font-size: 12px;\r\n    color: #000;\r\n    background-color: rgb(255, 255, 255);\r\n    user-select: none;\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n    padding: 0px 10px;\r\n    margin-bottom: 2px;\r\n    border-radius: 5px;\r\n    border-width: 1px;\r\n    border-style: solid;\r\n    border-color: rgb(234, 234, 234);\r\n    border-image: initial;\r\n    transition: all 0.2s ease 0s;\r\n    overflow: hidden;\r\n    outline: none;\r\n  }\r\n  \r\n  .Content {\r\n    display: flex;\r\n    flex-direction: row;\r\n    padding-top: 16px;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n  }\r\n  \r\n  .Files {\r\n    margin-left: 32px;\r\n    color: #FFF;\r\n    font-color: #FFF;\r\n    align-items: flex-start;\r\n    justify-items: flex-start;\r\n    flex: 1;\r\n    overflow-y: auto;\r\n  }\r\n  \r\n  .Actions {\r\n    display: flex;\r\n    flex: 1;\r\n    width: 100%;\r\n    align-items: flex-end;\r\n    flex-direction: column;\r\n    margin-top: 32px;\r\n  }\r\n  \r\n  .Title {\r\n    margin-bottom: 32px;\r\n    color: #FFF;\r\n  }\r\n  \r\n  .Filename {\r\n    margin-bottom: 8px;\r\n    padding-right: 100px;\r\n    font-size: 12px;\r\n    color: #FFF;\r\n  }\r\n  \r\n  .Row {\r\n    display: flex;\r\n    flex: 1;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    height: 50px;\r\n    padding: 8px;\r\n    overflow: hidden;\r\n    box-sizing: border-box;\r\n  }\r\n  \r\n  .CheckIcon {\r\n    opacity: 0.5;\r\n    margin-left: 32px;\r\n  }\r\n  \r\n  .ProgressWrapper {\r\n    display: flex;\r\n    flex: 1;\r\n    flex-direction: row;\r\n    align-items: center;\r\n  }\r\n  \r\n  button {\r\n    font-family: \"Roboto medium\", sans-serif;\r\n    font-size: 14px;\r\n    display: inline-block;\r\n    height: 36px;\r\n    min-width: 88px;\r\n    padding: 6px 16px;\r\n    line-height: 1.42857143;\r\n    text-align: center;\r\n    white-space: nowrap;\r\n    vertical-align: middle;\r\n    -ms-touch-action: manipulation;\r\n    touch-action: manipulation;\r\n    cursor: pointer;\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n    border: 0;\r\n    border-radius: 2px;\r\n    background: rgba(103, 58, 183, 1);\r\n    color: #fff;\r\n    outline: 0;\r\n  }\r\n  \r\n  button:disabled {\r\n    background: rgb(189, 189, 189);\r\n    cursor: default;\r\n  }\r\n`}</style>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Upload;"]},"metadata":{},"sourceType":"module"}