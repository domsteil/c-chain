{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { Component } from \"react\";\nimport Dropzone from \"../dropzone/Dropzone\";\nimport Progress from \"../progress/Progress\";\n\nvar Upload =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Upload, _Component);\n\n  function Upload(props) {\n    var _this;\n\n    _classCallCheck(this, Upload);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Upload).call(this, props));\n    _this.state = {\n      files: [],\n      policy: [],\n      uploading: false,\n      uploadProgress: {},\n      successfullUploaded: false\n    };\n    _this.onFilesAdded = _this.onFilesAdded.bind(_assertThisInitialized(_this));\n    _this.uploadFiles = _this.uploadFiles.bind(_assertThisInitialized(_this));\n    _this.sendRequest = _this.sendRequest.bind(_assertThisInitialized(_this));\n    _this.renderActions = _this.renderActions.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Upload, [{\n    key: \"onFilesAdded\",\n    value: function onFilesAdded(files) {\n      this.setState(function (prevState) {\n        return {\n          files: prevState.files.concat(files)\n        };\n      });\n    }\n  }, {\n    key: \"uploadFiles\",\n    value: function () {\n      var _uploadFiles = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var promises;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState({\n                  uploadProgress: {},\n                  uploading: true\n                });\n                promises = [];\n                this.state.files.forEach(function (file) {\n                  promises.push(_this2.sendRequest(file));\n                });\n                _context.prev = 3;\n                _context.next = 6;\n                return _Promise.all(promises);\n\n              case 6:\n                this.setState({\n                  successfullUploaded: true,\n                  uploading: false\n                });\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](3);\n                // Not Production ready! Do some error handling here instead...\n                this.setState({\n                  successfullUploaded: true,\n                  uploading: false\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 9]]);\n      }));\n\n      function uploadFiles() {\n        return _uploadFiles.apply(this, arguments);\n      }\n\n      return uploadFiles;\n    }()\n  }, {\n    key: \"sendRequest\",\n    value: function sendRequest(file) {\n      var _this3 = this;\n\n      return new _Promise(function (resolve, reject) {\n        var req = new XMLHttpRequest();\n        req.upload.addEventListener(\"progress\", function (event) {\n          if (event.lengthComputable) {\n            var copy = _objectSpread({}, _this3.state.uploadProgress);\n\n            copy[file.name] = {\n              state: \"pending\",\n              percentage: event.loaded / event.total * 100\n            };\n\n            _this3.setState({\n              uploadProgress: copy\n            });\n          }\n        });\n        req.upload.addEventListener(\"load\", function (event) {\n          var copy = _objectSpread({}, _this3.state.uploadProgress);\n\n          copy[file.name] = {\n            state: \"done\",\n            percentage: 100\n          };\n\n          _this3.setState({\n            uploadProgress: copy\n          });\n\n          resolve(req.response);\n        });\n        req.upload.addEventListener(\"error\", function (event) {\n          var copy = _objectSpread({}, _this3.state.uploadProgress);\n\n          copy[file.name] = {\n            state: \"error\",\n            percentage: 0\n          };\n\n          _this3.setState({\n            uploadProgress: copy\n          });\n\n          reject(req.response);\n        });\n        var formData = new FormData();\n        formData.append(\"policy\", policy, policy.name);\n        formData.append(\"file\", file, file.name);\n        req.open(\"POST\", \"http://ec2-18-204-34-34.compute-1.amazonaws.com:5000/upload\");\n        req.send(formData);\n      });\n    }\n  }, {\n    key: \"renderProgress\",\n    value: function renderProgress(file) {\n      var uploadProgress = this.state.uploadProgress[file.name];\n\n      if (this.state.uploading || this.state.successfullUploaded) {\n        return React.createElement(\"div\", {\n          className: \"ProgressWrapper\"\n        }, React.createElement(Progress, {\n          progress: uploadProgress ? uploadProgress.percentage : 0\n        }), React.createElement(\"img\", {\n          className: \"CheckIcon\",\n          alt: \"done\",\n          src: \"baseline-check_circle_outline-24px.svg\",\n          style: {\n            opacity: uploadProgress && uploadProgress.state === \"done\" ? 0.5 : 0\n          }\n        }));\n      }\n    }\n  }, {\n    key: \"renderActions\",\n    value: function renderActions() {\n      var _this4 = this;\n\n      if (this.state.successfullUploaded) {\n        return React.createElement(\"button\", {\n          className: \"policyButton\",\n          onClick: function onClick() {\n            return _this4.setState({\n              files: [],\n              successfullUploaded: false\n            });\n          }\n        }, \"Clear\");\n      } else {\n        return React.createElement(\"button\", {\n          className: \"policyButton\",\n          disabled: this.state.files.length < 0 || this.state.uploading,\n          onClick: this.uploadFiles\n        }, \"Upload\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(\"div\", {\n        className: \"jsx-2124338787\" + \" \" + \"Upload\"\n      }, React.createElement(\"span\", {\n        className: \"jsx-2124338787\" + \" \" + \"Title\"\n      }), React.createElement(\"div\", {\n        className: \"jsx-2124338787\" + \" \" + \"Content\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-2124338787\"\n      }, React.createElement(Dropzone, {\n        onFilesAdded: this.onFilesAdded,\n        disabled: this.state.uploading || this.state.successfullUploaded\n      })), React.createElement(\"div\", {\n        className: \"jsx-2124338787\" + \" \" + \"Files\"\n      }, this.state.files.map(function (file) {\n        return React.createElement(\"div\", {\n          key: file.name,\n          className: \"jsx-2124338787\" + \" \" + \"Row\"\n        }, React.createElement(\"span\", {\n          className: \"jsx-2124338787\" + \" \" + \"Filename\"\n        }, file.name), _this5.renderProgress(file));\n      }))), React.createElement(\"div\", {\n        className: \"jsx-2124338787\" + \" \" + \"Actions\"\n      }, this.renderActions()), React.createElement(\"form\", {\n        className: \"jsx-2124338787\"\n      }, React.createElement(\"select\", {\n        id: \"policy\",\n        onSelect: function onSelect() {\n          return _this5.setState({\n            policy: [],\n            successfullUploaded: false\n          });\n        },\n        className: \"jsx-2124338787\" + \" \" + \"policyDropdown\"\n      }, React.createElement(\"option\", {\n        value: \"policy1\",\n        className: \"jsx-2124338787\"\n      }, \"Policy 1\"), React.createElement(\"option\", {\n        value: \"policy2\",\n        className: \"jsx-2124338787\"\n      }, \"Policy 2\"))), React.createElement(_JSXStyle, {\n        id: \"2124338787\"\n      }, [\".Upload.jsx-2124338787{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:1;-ms-flex:1;flex:1;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;text-align:left;overflow:hidden;width:300px;align:center;margin-left:800px;}\", \".policyButton.jsx-2124338787{-webkit-appearance:none;position:relative;display:inline-block;vertical-align:middle;text-transform:uppercase;text-align:center;text-color:#000;line-height:0;white-space:nowrap;width:120px;height:30px;margin-left:8px;font-weight:500;font-size:12px;color:rgb(102,102,102);background-color:rgb(255,255,255);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;-webkit-text-decoration:none;text-decoration:none;padding:0px 10px;margin-bottom:2px;border-radius:5px;border-width:1px;border-style:solid;border-color:rgb(234,234,234);border-image:initial;-webkit-transition:all 0.2s ease 0s;transition:all 0.2s ease 0s;overflow:hidden;outline:none;}\", \".policyDropdown.jsx-2124338787{display:inline-block;vertical-align:middle;text-transform:uppercase;text-align:center;line-height:0;white-space:nowrap;width:120px;height:30px;margin-left:8px;font-weight:500;font-size:12px;color:rgb(102,102,102);background-color:rgb(255,255,255);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;-webkit-text-decoration:none;text-decoration:none;padding:0px 10px;margin-bottom:2px;border-radius:5px;border-width:1px;border-style:solid;border-color:rgb(234,234,234);border-image:initial;-webkit-transition:all 0.2s ease 0s;transition:all 0.2s ease 0s;overflow:hidden;outline:none;}\", \".Content.jsx-2124338787{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;padding-top:16px;box-sizing:border-box;width:100%;}\", \".Files.jsx-2124338787{margin-left:32px;color:#FFF;font-color:#FFF;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;justify-items:flex-start;-webkit-flex:1;-ms-flex:1;flex:1;overflow-y:auto;}\", \".Actions.jsx-2124338787{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex:1;-ms-flex:1;flex:1;width:100%;-webkit-align-items:flex-end;-webkit-box-align:flex-end;-ms-flex-align:flex-end;align-items:flex-end;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;margin-top:32px;}\", \".Title.jsx-2124338787{margin-bottom:32px;color:#FFF;}\", \".Filename.jsx-2124338787{margin-bottom:8px;padding-right:100px;font-size:12px;color:#FFF;}\", \".Row.jsx-2124338787{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex:1;-ms-flex:1;flex:1;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;height:50px;padding:8px;overflow:hidden;box-sizing:border-box;}\", \".CheckIcon.jsx-2124338787{opacity:0.5;margin-left:32px;}\", \".ProgressWrapper.jsx-2124338787{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex:1;-ms-flex:1;flex:1;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}\", \"button.jsx-2124338787{font-family:\\\"Roboto medium\\\",sans-serif;font-size:14px;display:inline-block;height:36px;min-width:88px;padding:6px 16px;line-height:1.42857143;text-align:center;white-space:nowrap;vertical-align:middle;-ms-touch-action:manipulation;touch-action:manipulation;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border:0;border-radius:2px;background:rgba(103,58,183,1);color:#fff;outline:0;}\", \"button.jsx-2124338787:disabled{background:rgb(189,189,189);cursor:default;}\"]));\n    }\n  }]);\n\n  return Upload;\n}(Component);\n\nexport default Upload;","map":null,"metadata":{},"sourceType":"module"}