{"ast":null,"code":"import mitt from 'mitt';\nimport Router from 'next/router';\nvar emitter = mitt();\nexport default emitter;\n\nRouter.onRouteChangeStart = function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  emitter.emit.apply(emitter, ['routeChangeStart'].concat(args));\n};\n\nRouter.onRouteChangeComplete = function () {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  emitter.emit.apply(emitter, ['routeChangeComplete'].concat(args));\n};\n\nRouter.onRouteChangeError = function () {\n  for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n\n  emitter.emit.apply(emitter, ['routeChangeError'].concat(args));\n};","map":{"version":3,"sources":["C:\\c-chain\\lib\\router-events.js"],"names":["mitt","Router","emitter","onRouteChangeStart","args","emit","onRouteChangeComplete","onRouteChangeError"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,IAAMC,OAAO,GAAGF,IAAI,EAApB;AACA,eAAeE,OAAf;;AAEAD,MAAM,CAACE,kBAAP,GAA4B,YAAa;AAAA,oCAATC,IAAS;AAATA,IAAAA,IAAS;AAAA;;AACvCF,EAAAA,OAAO,CAACG,IAAR,OAAAH,OAAO,GAAM,kBAAN,SAA6BE,IAA7B,EAAP;AACD,CAFD;;AAIAH,MAAM,CAACK,qBAAP,GAA+B,YAAa;AAAA,qCAATF,IAAS;AAATA,IAAAA,IAAS;AAAA;;AAC1CF,EAAAA,OAAO,CAACG,IAAR,OAAAH,OAAO,GAAM,qBAAN,SAAgCE,IAAhC,EAAP;AACD,CAFD;;AAIAH,MAAM,CAACM,kBAAP,GAA4B,YAAa;AAAA,qCAATH,IAAS;AAATA,IAAAA,IAAS;AAAA;;AACvCF,EAAAA,OAAO,CAACG,IAAR,OAAAH,OAAO,GAAM,kBAAN,SAA6BE,IAA7B,EAAP;AACD,CAFD","sourcesContent":["import mitt from 'mitt';\r\nimport Router from 'next/router';\r\n\r\nconst emitter = mitt();\r\nexport default emitter;\r\n\r\nRouter.onRouteChangeStart = (...args) => {\r\n  emitter.emit('routeChangeStart', ...args);\r\n};\r\n\r\nRouter.onRouteChangeComplete = (...args) => {\r\n  emitter.emit('routeChangeComplete', ...args);\r\n};\r\n\r\nRouter.onRouteChangeError = (...args) => {\r\n  emitter.emit('routeChangeError', ...args);\r\n};"]},"metadata":{},"sourceType":"module"}